<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Compras Grupales - Lazo Mercado </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #2e7d32;
            --primary-light: #4caf50;
            --primary-dark: #1b5e20;
            --secondary: #f9a825;
            --background: #f8f5f0;
            --card: #ffffff;
            --text: #333333;
            --border: #e0e0e0;
            --success: #388e3c;
            --warning: #f57c00;
            --error: #d32f2f;
            --admin-bg: #f0f7ff;
            --unavailable: #bdbdbd;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: var(--background);
            color: var(--text);
            line-height: 1.6;
            min-height: 100vh;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><rect fill="none" width="100" height="100"/><path fill="rgba(46, 125, 50, 0.03)" d="M0,0 L100,0 L100,100 L0,100 Z"/></svg>');
            background-size: 300px;
        }
        
        header {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 1.5rem 1rem;
            text-align: center;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            position: relative;
            overflow: hidden;
            z-index: 10;
        }
        
        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 10px;
        }
        
        .logo i {
            font-size: 2.8rem;
            color: #fff;
        }
        
        .logo h1 {
            font-size: 2.2rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }
        
        .logo p {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .admin-indicator {
            position: absolute;
            top: 15px;
            right: 15px;
            background: var(--secondary);
            color: #333;
            padding: 6px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 2;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 25px;
        }
        
        .app-container {
            display: flex;
            flex-direction: column;
            min-height: 70vh;
        }
        
        /* Estilos para formulario de solicitante */
        .solicitante-form {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            max-width: 600px;
            margin: 0 auto;
            width: 100%;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            margin-bottom: 10px;
            font-weight: 500;
            color: #444;
            font-size: 1.1rem;
        }
        
        input, select, textarea {
            width: 100%;
            padding: 14px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 1.05rem;
            background: #f9f9f9;
            transition: all 0.3s;
        }
        
        input:focus, textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(46, 125, 50, 0.2);
            background: white;
        }
        
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .product-card {
            border: 1px solid #eaeaea;
            border-radius: 12px;
            padding: 15px;
            text-align: center;
            transition: all 0.3s;
            background: white;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            position: relative;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            border-color: rgba(46, 125, 50, 0.3);
        }
        
        .product-card.unavailable {
            opacity: 0.7;
            background-color: #f9f9f9;
        }
        
        .unavailable-tag {
            position: absolute;
            top: 10px;
            right: 10px;
            background: var(--warning);
            color: white;
            padding: 4px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .product-name {
            font-weight: 600;
            font-size: 1.1rem;
            margin: 10px 0 5px;
            color: #333;
        }
        
        .product-info {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 10px;
        }
        
        .btn {
            background: linear-gradient(to right, var(--primary), var(--primary-dark));
            color: white;
            border: none;
            padding: 14px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.1rem;
            font-weight: 500;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            box-shadow: 0 4px 10px rgba(46, 125, 50, 0.3);
            width: 100%;
            margin-top: 20px;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(46, 125, 50, 0.4);
        }
        
        .btn:active {
            transform: translateY(1px);
        }
        
        .btn-secondary {
            background: linear-gradient(to right, var(--secondary), #e69100);
        }
        
        .btn-admin {
            background: linear-gradient(to right, #1565c0, #0d47a1);
        }
        
        /* Panel de administrador */
        .admin-container {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            margin-top: 30px;
            display: none;
        }
        
        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(46, 125, 50, 0.15);
        }
        
        .admin-controls {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .orders-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 25px;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }
        
        .orders-table th, .orders-table td {
            padding: 15px 18px;
            text-align: left;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }
        
        .orders-table th {
            background-color: rgba(46, 125, 50, 0.15);
            font-weight: 600;
            color: var(--primary-dark);
            font-size: 1.1rem;
        }
        
        .orders-table tr {
            transition: background-color 0.2s;
        }
        
        .orders-table tr:last-child td {
            border-bottom: none;
        }
        
        .orders-table tr:hover {
            background-color: rgba(46, 125, 50, 0.05);
        }
        
        .status-badge {
            display: inline-block;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
        }
        
        .status-pendiente {
            background-color: #ffecb3;
            color: #f57c00;
        }
        
        .status-completado {
            background-color: #c8e6c9;
            color: #388e3c;
        }
        
        .action-btn {
            padding: 8px 15px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.95rem;
            margin-right: 8px;
            transition: all 0.2s;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-weight: 500;
        }
        
        .btn-complete {
            background: linear-gradient(to right, var(--primary), var(--primary-dark));
            color: white;
            box-shadow: 0 3px 8px rgba(46, 125, 50, 0.3);
        }
        
        .btn-delete {
            background: linear-gradient(to right, var(--error), #b71c1c);
            color: white;
            box-shadow: 0 3px 8px rgba(211, 47, 47, 0.3);
        }
        
        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 12px rgba(0,0,0,0.15);
        }
        
        .product-quantity {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
            justify-content: center;
        }
        
        .quantity-btn {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            border: 1px solid #ddd;
            background: #f9f9f9;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .quantity-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }
        
        .quantity-input {
            width: 80px;
            text-align: center;
            font-size: 1.1rem;
            font-weight: 500;
            padding: 8px 12px;
        }
        
        .notification {
            position: fixed;
            top: 25px;
            right: 25px;
            padding: 18px 25px;
            border-radius: 10px;
            color: white;
            font-weight: 500;
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 15px;
            transform: translateX(120%);
            transition: transform 0.4s ease;
            max-width: 400px;
            backdrop-filter: blur(5px);
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.success {
            background: rgba(56, 142, 60, 0.9);
            border-left: 5px solid #2e7d32;
        }
        
        .notification.error {
            background: rgba(211, 47, 47, 0.9);
            border-left: 5px solid #b71c1c;
        }
        
        .footer {
            text-align: center;
            padding: 30px;
            color: #666;
            font-size: 1rem;
            margin-top: 50px;
            border-top: 1px solid rgba(0,0,0,0.08);
            background: rgba(255,255,255,0.7);
            backdrop-filter: blur(5px);
        }
        
        .summary-card {
            background: var(--card);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            border: 1px solid rgba(46, 125, 50, 0.1);
        }
        
        .summary-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 15px;
        }
        
        .summary-icon {
            font-size: 1.5rem;
            color: var(--primary);
            background: rgba(46, 125, 50, 0.1);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .summary-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
        }
        
        .summary-value {
            font-size: 1.8rem;
            font-weight: 700;
            text-align: center;
            color: var(--primary);
            margin: 10px 0;
        }
        
        .admin-login-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .admin-login-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .login-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }
        
        .login-container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 15px 50px rgba(0,0,0,0.25);
            position: relative;
        }
        
        .login-container h2 {
            text-align: center;
            margin-bottom: 30px;
            color: var(--primary);
            font-size: 1.8rem;
        }
        
        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }
        
        /* Modal para agregar pedido */
        .add-order-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }
        
        .add-order-container {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            box-shadow: 0 15px 50px rgba(0,0,0,0.25);
            position: relative;
            max-height: 90vh;
            overflow-y: auto;
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 25px 0;
        }
        
        .stat-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            text-align: center;
            border-left: 5px solid var(--primary);
        }
        
        .stat-title {
            font-size: 1.1rem;
            color: #666;
            margin-bottom: 10px;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary);
        }
        
        .compras-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }
        
        .compras-container {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 800px;
            width: 90%;
            box-shadow: 0 15px 50px rgba(0,0,0,0.25);
            position: relative;
        }
        
        .compras-container h2 {
            text-align: center;
            margin-bottom: 25px;
            color: var(--primary);
        }
        
        .compras-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        .compras-table th, .compras-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }
        
        .compras-table th {
            background-color: rgba(46, 125, 50, 0.1);
            font-weight: 600;
        }
        
        .compras-table tr:last-child td {
            border-bottom: none;
        }
        
        .compras-table tr:hover {
            background-color: rgba(46, 125, 50, 0.05);
        }
        
        .admin-tabs {
            display: flex;
            background: #f9f9f9;
            border-radius: 12px;
            overflow: hidden;
            margin-bottom: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        
        .admin-tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            border-bottom: 3px solid transparent;
            font-weight: 500;
        }
        
        .admin-tab.active {
            border-bottom: 3px solid var(--primary);
            background: rgba(46, 125, 50, 0.08);
            font-weight: 600;
            color: var(--primary-dark);
        }
        
        .admin-tab-content {
            display: none;
        }
        
        .admin-tab-content.active {
            display: block;
            animation: fadeIn 0.4s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .price-manager {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            margin-bottom: 30px;
        }
        
        .price-item {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .price-item:last-child {
            border-bottom: none;
        }
        
        .price-name {
            flex: 2;
            font-weight: 500;
        }
        
        .price-name-input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 6px;
            margin-bottom: 10px;
        }
        
        .price-input {
            width: 120px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 6px;
            margin: 0 15px;
            text-align: right;
        }
        
        .availability-toggle {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
            margin: 0 15px;
        }
        
        .availability-toggle input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 24px;
        }
        
        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        
        input:checked + .slider {
            background-color: var(--primary);
        }
        
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        
        .saco-toggle {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }
        
        .saco-toggle input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        
        @media (max-width: 768px) {
            .product-grid {
                grid-template-columns: 1fr;
            }
            
            .admin-controls {
                flex-direction: column;
            }
            
            .container {
                padding: 15px;
            }
            
            .solicitante-form {
                padding: 20px;
            }
            
            .orders-table th, .orders-table td {
                padding: 10px 12px;
                font-size: 0.9rem;
            }
            
            .action-btn {
                padding: 6px 10px;
                font-size: 0.85rem;
            }
            
            .quantity-input {
                width: 70px;
            }
            
            .price-item {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .price-name {
                margin-bottom: 10px;
            }
            
            .price-name-input, .price-input {
                margin: 5px 0;
                width: 100%;
            }
            
            .availability-toggle, .saco-toggle {
                margin: 10px 0;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">
            <i class="fas fa-shopping-basket"></i>
            <div>
                <h1>Compras Grupales</h1>
                <p> Lazo Mercado - Entregas a convenir</p>
            </div>
        </div>
        <a href="#" id="admin-login-link" class="admin-login-btn">
            <i class="fas fa-user-shield"></i> Acceso administrador
        </a>
    </header>
    
    <div class="container">
        <div class="app-container">
            <!-- Formulario para solicitante -->
            <div class="solicitante-form" id="solicitante-form">
                <h2 style="text-align: center; margin-bottom: 20px; color: var(--primary);">
                    <i class="fas fa-cart-plus"></i> Realiza tu pedido
                </h2>
                
                <div class="form-group">
                    <label for="nombre"><i class="fas fa-user"></i> Nombre completo</label>
                    <input type="text" id="nombre" required placeholder="Juan Pérez">
                </div>
                
                <div class="form-group">
                    <label for="telefono"><i class="fas fa-phone"></i> Teléfono</label>
                    <input type="tel" id="telefono" required placeholder="+56912345678">
                </div>
                
                <h3 style="margin: 25px 0 15px; color: var(--primary);">
                    <i class="fas fa-apple-alt"></i> Selecciona los productos:
                </h3>
                
                <div class="product-grid">
                    <!-- Producto 1 -->
                    <div class="product-card" id="producto1-card">
                        <div class="product-name" id="producto1-name">Paltas</div>
                        <div class="product-info">Precio por kilo: <span id="producto1-price">$3.500</span></div>
                        <div class="form-group">
                            <label for="producto1">Kilos:</label>
                            <div class="product-quantity">
                                <button type="button" class="quantity-btn" data-target="producto1" data-action="decrease">-</button>
                                <input type="number" id="producto1" min="0" step="1" value="0" class="quantity-input">
                                <button type="button" class="quantity-btn" data-target="producto1" data-action="increase">+</button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Producto 2 -->
                    <div class="product-card" id="producto2-card">
                        <div class="product-name" id="producto2-name">Papas</div>
                        <div class="product-info" id="producto2-info">Saco de 25 kilos o sueltas</div>
                        <div class="form-group" id="sacos-producto2-group">
                            <label for="sacos-producto2">Sacos:</label>
                            <div class="product-quantity">
                                <button type="button" class="quantity-btn" data-target="sacos-producto2" data-action="decrease">-</button>
                                <input type="number" id="sacos-producto2" min="0" step="1" value="0" class="quantity-input">
                                <button type="button" class="quantity-btn" data-target="sacos-producto2" data-action="increase">+</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="kilos-producto2">Kilos sueltos:</label>
                            <div class="product-quantity">
                                <button type="button" class="quantity-btn" data-target="kilos-producto2" data-action="decrease">-</button>
                                <input type="number" id="kilos-producto2" min="0" step="1" value="0" class="quantity-input">
                                <button type="button" class="quantity-btn" data-target="kilos-producto2" data-action="increase">+</button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Producto 3 -->
                    <div class="product-card" id="producto3-card">
                        <div class="product-name" id="producto3-name">Limones</div>
                        <div class="product-info">Precio por kilo: <span id="producto3-price">$1.800</span></div>
                        <div class="form-group">
                            <label for="producto3">Kilos:</label>
                            <div class="product-quantity">
                                <button type="button" class="quantity-btn" data-target="producto3" data-action="decrease">-</button>
                                <input type="number" id="producto3" min="0" step="1" value="0" class="quantity-input">
                                <button type="button" class="quantity-btn" data-target="producto3" data-action="increase">+</button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Producto 4 -->
                    <div class="product-card" id="producto4-card">
                        <div class="product-name" id="producto4-name">Lechugas</div>
                        <div class="product-info">Precio por unidad: <span id="producto4-price">$800</span></div>
                        <div class="form-group">
                            <label for="producto4">Unidades:</label>
                            <div class="product-quantity">
                                <button type="button" class="quantity-btn" data-target="producto4" data-action="decrease">-</button>
                                <input type="number" id="producto4" min="0" step="1" value="0" class="quantity-input">
                                <button type="button" class="quantity-btn" data-target="producto4" data-action="increase">+</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="comentarios"><i class="fas fa-comment"></i> Comentarios adicionales</label>
                    <textarea id="comentarios" placeholder="Especificaciones especiales, alergias, etc." rows="3"></textarea>
                </div>
                
                <button class="btn" id="enviar-pedido">
                    <i class="fas fa-paper-plane"></i> Enviar Pedido
                </button>
            </div>
            
            <!-- Panel de administrador -->
            <div class="admin-container" id="admin-container">
                <div class="admin-header">
                    <h2><i class="fas fa-user-shield"></i> Panel de Administrador</h2>
                    <div class="admin-controls">
                        <button class="btn btn-admin" id="add-order-btn">
                            <i class="fas fa-plus-circle"></i> Agregar Pedido
                        </button>
                        <button class="btn btn-admin" id="compras-btn">
                            <i class="fas fa-shopping-cart"></i> Ver Resumen de Compra
                        </button>
                        <button class="btn btn-admin" id="export-btn">
                            <i class="fas fa-file-export"></i> Exportar
                        </button>
                        <button class="btn btn-admin" id="refresh-btn">
                            <i class="fas fa-sync"></i> Actualizar
                        </button>
                        <button class="btn btn-admin" id="logout-btn">
                            <i class="fas fa-sign-out-alt"></i> Salir
                        </button>
                    </div>
                </div>
                
                <div class="admin-tabs">
                    <div class="admin-tab active" data-tab="pedidos">Pedidos</div>
                    <div class="admin-tab" data-tab="precios">Gestión de Productos</div>
                    <div class="admin-tab" data-tab="resumen">Resumen</div>
                </div>
                
                <!-- Pestaña de Pedidos -->
                <div class="admin-tab-content active" id="pedidos-tab">
                    <div class="stats-container">
                        <div class="stat-card">
                            <div class="stat-title">Total de Pedidos</div>
                            <div class="stat-value" id="total-pedidos">0</div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Pedidos Pendientes</div>
                            <div class="stat-value" id="pedidos-pendientes">0</div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Sacos de Papas</div>
                            <div class="stat-value" id="total-sacos">0</div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Total Kilos Papas</div>
                            <div class="stat-value" id="total-kilos-papas">0</div>
                        </div>
                    </div>
                    
                    <h3 style="margin: 20px 0 15px;">
                        <i class="fas fa-list"></i> Lista de Pedidos
                    </h3>
                    
                    <table class="orders-table">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Teléfono</th>
                                <th>Productos</th>
                                <th>Comentarios</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="orders-body">
                            <!-- Los pedidos se insertarán aquí -->
                        </tbody>
                    </table>
                </div>
                
                <!-- Pestaña de Gestión de Productos -->
                <div class="admin-tab-content" id="precios-tab">
                    <div class="price-manager">
                        <h3><i class="fas fa-tags"></i> Gestión de Productos y Precios</h3>
                        <p>Aquí puedes actualizar precios, cambiar nombres, y marcar productos como no disponibles.</p>
                        
                        <div class="price-item">
                            <div class="price-name">
                                <label>Nombre del Producto 1:</label>
                                <input type="text" class="price-name-input" id="producto1-name-input" value="Paltas">
                            </div>
                            <input type="text" class="price-input" id="producto1-price-input" value="3500">
                            <span>$ por kilo</span>
                            <label style="margin-left: 20px;">
                                Disponible: 
                                <label class="availability-toggle">
                                    <input type="checkbox" id="producto1-available" checked>
                                    <span class="slider"></span>
                                </label>
                            </label>
                        </div>
                        
                        <div class="price-item">
                            <div class="price-name">
                                <label>Nombre del Producto 2:</label>
                                <input type="text" class="price-name-input" id="producto2-name-input" value="Papas">
                            </div>
                            <input type="text" class="price-input" id="producto2-price-input" value="1500">
                            <span>$ por kilo</span>
                            <label style="margin-left: 20px;">
                                Disponible: 
                                <label class="availability-toggle">
                                    <input type="checkbox" id="producto2-available" checked>
                                    <span class="slider"></span>
                                </label>
                            </label>
                            <label style="margin-left: 20px;">
                                Venta por saco: 
                                <label class="availability-toggle">
                                    <input type="checkbox" id="producto2-saco" checked>
                                    <span class="slider"></span>
                                </label>
                            </label>
                        </div>
                        
                        <div class="price-item">
                            <div class="price-name">
                                <label>Nombre del Producto 3:</label>
                                <input type="text" class="price-name-input" id="producto3-name-input" value="Limones">
                            </div>
                            <input type="text" class="price-input" id="producto3-price-input" value="1800">
                            <span>$ por kilo</span>
                            <label style="margin-left: 20px;">
                                Disponible: 
                                <label class="availability-toggle">
                                    <input type="checkbox" id="producto3-available" checked>
                                    <span class="slider"></span>
                                </label>
                            </label>
                        </div>
                        
                        <div class="price-item">
                            <div class="price-name">
                                <label>Nombre del Producto 4:</label>
                                <input type="text" class="price-name-input" id="producto4-name-input" value="Lechugas">
                            </div>
                            <input type="text" class="price-input" id="producto4-price-input" value="800">
                            <span>$ por unidad</span>
                            <label style="margin-left: 20px;">
                                Disponible: 
                                <label class="availability-toggle">
                                    <input type="checkbox" id="producto4-available" checked>
                                    <span class="slider"></span>
                                </label>
                            </label>
                        </div>
                        
                        <button class="btn" id="save-prices" style="margin-top: 20px;">
                            <i class="fas fa-save"></i> Guardar Cambios
                        </button>
                    </div>
                    
                    <div class="price-manager">
                        <h3><i class="fas fa-calendar-alt"></i> Temporadas de Productos</h3>
                        <p>Información sobre disponibilidad estacional:</p>
                        
                        <div style="background: #e8f5e9; padding: 20px; border-radius: 10px; margin-top: 15px;">
                            <h4><i class="fas fa-info-circle"></i> <span id="palta-status-name">Paltas Chilenas</span></h4>
                            <p>Disponibilidad: Noviembre a Marzo</p>
                            <p>Actualmente: <span id="palta-status" style="font-weight: 600;">Fuera de temporada</span></p>
                        </div>
                        
                        <div style="background: #e8f5e9; padding: 20px; border-radius: 10px; margin-top: 15px;">
                            <h4><i class="fas fa-info-circle"></i> Limones</h4>
                            <p>Disponibilidad: Todo el año</p>
                            <p>Actualmente: <span style="font-weight: 600; color: var(--success);">Disponible</span></p>
                        </div>
                    </div>
                </div>
                
                <!-- Pestaña de Resumen -->
                <div class="admin-tab-content" id="resumen-tab">
                    <div class="stats-container">
                        <div class="stat-card">
                            <div class="stat-title">Total Ingresos</div>
                            <div class="stat-value">$<span id="total-ingresos">0</span></div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Producto Más Vendido</div>
                            <div class="stat-value" id="producto-popular">---</div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Cliente Frecuente</div>
                            <div class="stat-value" id="cliente-frecuente">---</div>
                        </div>
                        
                        <div class="stat-card">
                            <div class="stat-title">Promedio por Pedido</div>
                            <div class="stat-value">$<span id="promedio-pedido">0</span></div>
                        </div>
                    </div>
                    
                    <div class="price-manager">
                        <h3><i class="fas fa-chart-line"></i> Historial de Ventas</h3>
                        <div style="height: 200px; background: #f9f9f9; border-radius: 10px; padding: 15px; margin-top: 15px; display: flex; align-items: flex-end; gap: 10px;">
                            <div style="flex: 1; display: flex; flex-direction: column; align-items: center;">
                                <div style="width: 30px; background: var(--primary); height: 50px; border-radius: 5px 5px 0 0;"></div>
                                <div style="font-size: 0.8rem; margin-top: 5px;">Lun</div>
                            </div>
                            <div style="flex: 1; display: flex; flex-direction: column; align-items: center;">
                                <div style="width: 30px; background: var(--primary); height: 80px; border-radius: 5px 5px 0 0;"></div>
                                <div style="font-size: 0.8rem; margin-top: 5px;">Mar</div>
                            </div>
                            <div style="flex: 1; display: flex; flex-direction: column; align-items: center;">
                                <div style="width: 30px; background: var(--primary); height: 120px; border-radius: 5px 5px 0 0;"></div>
                                <div style="font-size: 0.8rem; margin-top: 5px;">Mié</div>
                            </div>
                            <div style="flex: 1; display: flex; flex-direction: column; align-items: center;">
                                <div style="width: 30px; background: var(--primary); height: 160px; border-radius: 5px 5px 0 0;"></div>
                                <div style="font-size: 0.8rem; margin-top: 5px;">Jue</div>
                            </div>
                            <div style="flex: 1; display: flex; flex-direction: column; align-items: center;">
                                <div style="width: 30px; background: var(--primary); height: 100px; border-radius: 5px 5px 0 0;"></div>
                                <div style="font-size: 0.8rem; margin-top: 5px;">Vie</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Modal de Login -->
    <div class="login-modal" id="login-modal">
        <div class="login-container">
            <span class="close-modal" id="close-login">&times;</span>
            <h2><i class="fas fa-lock"></i> Acceso Administrador</h2>
            <div class="form-group">
                <label for="admin-email"><i class="fas fa-envelope"></i> Correo:</label>
                <input type="email" id="admin-email" placeholder="admin@ejemplo.com">
            </div>
            <div class="form-group">
                <label for="admin-password"><i class="fas fa-lock"></i> Contraseña:</label>
                <input type="password" id="admin-password" placeholder="••••••••">
            </div>
            <button class="btn btn-admin" id="login-btn" style="width: 100%;">
                <i class="fas fa-sign-in-alt"></i> Iniciar sesión
            </button>
            <p id="login-error" style="color: #d32f2f; margin-top: 15px; display: none; text-align: center;">
                <i class="fas fa-exclamation-circle"></i> Credenciales incorrectas
            </p>
            
            <div style="margin-top: 30px; text-align: center; color: #666; background: #f9f9f9; padding: 15px; border-radius: 10px;">
                <p>Para probar la aplicación:</p>
                <p style="font-weight: 500; margin-top: 10px;"><i class="fas fa-user"></i> <strong>Email:</strong> admin@valledor.com</p>
                <p style="font-weight: 500;"><i class="fas fa-key"></i> <strong>Contraseña:</strong> admin123</p>
            </div>
        </div>
    </div>
    
    <!-- Modal para agregar pedido -->
    <div class="add-order-modal" id="add-order-modal">
        <div class="add-order-container">
            <span class="close-modal" id="close-add-order">&times;</span>
            <h2><i class="fas fa-cart-plus"></i> Agregar Nuevo Pedido</h2>
            
            <div class="form-group">
                <label for="admin-nombre"><i class="fas fa-user"></i> Nombre completo</label>
                <input type="text" id="admin-nombre" required placeholder="Juan Pérez">
            </div>
            
            <div class="form-group">
                <label for="admin-telefono"><i class="fas fa-phone"></i> Teléfono</label>
                <input type="tel" id="admin-telefono" required placeholder="+56912345678">
            </div>
            
            <h3 style="margin: 15px 0;"><i class="fas fa-apple-alt"></i> Productos:</h3>
            
            <div class="product-grid">
                <!-- Producto 1 -->
                <div class="product-card">
                    <div class="product-name" id="admin-producto1-name">Paltas</div>
                    <div class="product-info">Precio por kilo: $<span id="admin-producto1-price">3.500</span></div>
                    <div class="form-group">
                        <label for="admin-producto1">Kilos:</label>
                        <div class="product-quantity">
                            <button type="button" class="quantity-btn" data-target="admin-producto1" data-action="decrease">-</button>
                            <input type="number" id="admin-producto1" min="0" step="1" value="0" class="quantity-input">
                            <button type="button" class="quantity-btn" data-target="admin-producto1" data-action="increase">+</button>
                        </div>
                    </div>
                </div>
                
                <!-- Producto 2 -->
                <div class="product-card">
                    <div class="product-name" id="admin-producto2-name">Papas</div>
                    <div class="product-info" id="admin-producto2-info">Saco de 25 kilos o sueltas</div>
                    <div class="form-group" id="admin-sacos-producto2-group">
                        <label for="admin-sacos-producto2">Sacos:</label>
                        <div class="product-quantity">
                            <button type="button" class="quantity-btn" data-target="admin-sacos-producto2" data-action="decrease">-</button>
                            <input type="number" id="admin-sacos-producto2" min="0" step="1" value="0" class="quantity-input">
                            <button type="button" class="quantity-btn" data-target="admin-sacos-producto2" data-action="increase">+</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="admin-kilos-producto2">Kilos sueltos:</label>
                        <div class="product-quantity">
                            <button type="button" class="quantity-btn" data-target="admin-kilos-producto2" data-action="decrease">-</button>
                            <input type="number" id="admin-kilos-producto2" min="0" step="1" value="0" class="quantity-input">
                            <button type="button" class="quantity-btn" data-target="admin-kilos-producto2" data-action="increase">+</button>
                        </div>
                    </div>
                </div>
                
                <!-- Producto 3 -->
                <div class="product-card">
                    <div class="product-name" id="admin-producto3-name">Limones</div>
                    <div class="product-info">Precio por kilo: $<span id="admin-producto3-price">1.800</span></div>
                    <div class="form-group">
                        <label for="admin-producto3">Kilos:</label>
                        <div class="product-quantity">
                            <button type="button" class="quantity-btn" data-target="admin-producto3" data-action="decrease">-</button>
                            <input type="number" id="admin-producto3" min="0" step="1" value="0" class="quantity-input">
                            <button type="button" class="quantity-btn" data-target="admin-producto3" data-action="increase">+</button>
                        </div>
                    </div>
                </div>
                
                <!-- Producto 4 -->
                <div class="product-card">
                    <div class="product-name" id="admin-producto4-name">Lechugas</div>
                    <div class="product-info">Precio por unidad: $<span id="admin-producto4-price">800</span></div>
                    <div class="form-group">
                        <label for="admin-producto4">Unidades:</label>
                        <div class="product-quantity">
                            <button type="button" class="quantity-btn" data-target="admin-producto4" data-action="decrease">-</button>
                            <input type="number" id="admin-producto4" min="0" step="1" value="0" class="quantity-input">
                            <button type="button" class="quantity-btn" data-target="admin-producto4" data-action="increase">+</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="admin-comentarios"><i class="fas fa-comment"></i> Comentarios</label>
                <textarea id="admin-comentarios" placeholder="Comentarios adicionales" rows="3"></textarea>
            </div>
            
            <button class="btn" id="admin-enviar-pedido">
                <i class="fas fa-paper-plane"></i> Agregar Pedido
            </button>
        </div>
    </div>
    
    <!-- Modal para resumen de compras -->
    <div class="compras-modal" id="compras-modal">
        <div class="compras-container">
            <span class="close-modal" id="close-compras">&times;</span>
            <h2><i class="fas fa-shopping-cart"></i> Resumen de Compra para el Mercado</h2>
            
            <div class="stats-container">
                <div class="stat-card">
                    <div class="stat-title" id="compras-title1">Paltas</div>
                    <div class="stat-value" id="compras-producto1">0 kg</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-title" id="compras-title2">Sacos de Papas</div>
                    <div class="stat-value" id="compras-sacos">0</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-title" id="compras-title3">Papas Sueltas</div>
                    <div class="stat-value" id="compras-papas-sueltas">0 kg</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-title" id="compras-title4">Limones</div>
                    <div class="stat-value" id="compras-limones">0 kg</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-title" id="compras-title5">Lechugas</div>
                    <div class="stat-value" id="compras-lechugas">0 unidades</div>
                </div>
            </div>
            
            <h3 style="margin: 20px 0 15px; text-align: center;">
                <i class="fas fa-clipboard-list"></i> Detalle por Producto
            </h3>
            
            <table class="compras-table">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Unidad</th>
                    </tr>
                </thead>
                <tbody id="compras-body">
                    <!-- Los detalles se insertarán aquí -->
                </tbody>
            </table>
            
            <div style="margin-top: 25px; text-align: center;">
                <button class="btn" id="print-compras">
                    <i class="fas fa-print"></i> Imprimir Resumen
                </button>
            </div>
        </div>
    </div>
    
    <div class="notification" id="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notification-text">Pedido registrado con éxito!</span>
    </div>
    
    <div class="footer">
        <p>Sistema de pedidos para Lazo Mercado | Entregas a convernir</p>
        <p>© 2025 - Todos los derechos reservados</p>
    </div>

    <script>
        // Datos iniciales
        let pedidos = [];
        let isAdmin = false;
        let adminEmail = "";
        
        // Configuración de productos - ahora con nombres personalizables
        let productosConfig = {
            producto1: {
                nombre: "Paltas",
                precio: 3500,
                disponible: true,
                unidad: "kg",
                tipo: "por peso"
            },
            producto2: {
                nombre: "Papas",
                precio: 1500,
                disponible: true,
                unidad: "kg",
                tipo: "por peso",
                ventaPorSaco: true
            },
            producto3: {
                nombre: "Limones",
                precio: 1800,
                disponible: true,
                unidad: "kg",
                tipo: "por peso"
            },
            producto4: {
                nombre: "Lechugas",
                precio: 800,
                disponible: true,
                unidad: "unidad",
                tipo: "por unidad"
            }
        };
        
        // Elementos DOM
        const solicitanteForm = document.getElementById('solicitante-form');
        const adminContainer = document.getElementById('admin-container');
        const adminLoginLink = document.getElementById('admin-login-link');
        const loginModal = document.getElementById('login-modal');
        const closeLogin = document.getElementById('close-login');
        const loginBtn = document.getElementById('login-btn');
        const loginError = document.getElementById('login-error');
        const logoutBtn = document.getElementById('logout-btn');
        const enviarPedidoBtn = document.getElementById('enviar-pedido');
        const ordersBody = document.getElementById('orders-body');
        const notification = document.getElementById('notification');
        const notificationText = document.getElementById('notification-text');
        const exportBtn = document.getElementById('export-btn');
        const refreshBtn = document.getElementById('refresh-btn');
        const totalPedidosElement = document.getElementById('total-pedidos');
        const pedidosPendientesElement = document.getElementById('pedidos-pendientes');
        const totalSacosElement = document.getElementById('total-sacos');
        const totalKilosPapasElement = document.getElementById('total-kilos-papas');
        const addOrderBtn = document.getElementById('add-order-btn');
        const addOrderModal = document.getElementById('add-order-modal');
        const closeAddOrderModal = document.getElementById('close-add-order');
        const adminEnviarPedidoBtn = document.getElementById('admin-enviar-pedido');
        const comprasBtn = document.getElementById('compras-btn');
        const comprasModal = document.getElementById('compras-modal');
        const closeComprasModal = document.getElementById('close-compras');
        const comprasProducto1 = document.getElementById('compras-producto1');
        const comprasSacos = document.getElementById('compras-sacos');
        const comprasPapasSueltas = document.getElementById('compras-papas-sueltas');
        const comprasProducto3 = document.getElementById('compras-limones');
        const comprasProducto4 = document.getElementById('compras-lechugas');
        const comprasBody = document.getElementById('compras-body');
        const printComprasBtn = document.getElementById('print-compras');
        const savePricesBtn = document.getElementById('save-prices');
        const totalIngresosElement = document.getElementById('total-ingresos');
        const productoPopularElement = document.getElementById('producto-popular');
        const clienteFrecuenteElement = document.getElementById('cliente-frecuente');
        const promedioPedidoElement = document.getElementById('promedio-pedido');
        
        // Tabs de administrador
        const adminTabs = document.querySelectorAll('.admin-tab');
        const adminTabContents = document.querySelectorAll('.admin-tab-content');
        
        // Botones de cantidad
        document.querySelectorAll('.quantity-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const target = btn.dataset.target;
                const action = btn.dataset.action;
                const input = document.getElementById(target);
                let value = parseInt(input.value) || 0;
                
                if (action === 'increase') {
                    value += 1;
                } else if (action === 'decrease' && value > 0) {
                    value -= 1;
                }
                
                input.value = value;
            });
        });
        
        // Actualizar nombres y precios en la interfaz
        function actualizarProductosUI() {
            // Actualizar nombres en formulario solicitante
            document.getElementById('producto1-name').textContent = productosConfig.producto1.nombre;
            document.getElementById('producto2-name').textContent = productosConfig.producto2.nombre;
            document.getElementById('producto3-name').textContent = productosConfig.producto3.nombre;
            document.getElementById('producto4-name').textContent = productosConfig.producto4.nombre;
            
            // Actualizar precios en formulario solicitante
            document.getElementById('producto1-price').textContent = '$' + productosConfig.producto1.precio.toLocaleString();
            document.getElementById('producto3-price').textContent = '$' + productosConfig.producto3.precio.toLocaleString();
            document.getElementById('producto4-price').textContent = '$' + productosConfig.producto4.precio.toLocaleString();
            
            // Actualizar en modal de admin
            document.getElementById('admin-producto1-name').textContent = productosConfig.producto1.nombre;
            document.getElementById('admin-producto2-name').textContent = productosConfig.producto2.nombre;
            document.getElementById('admin-producto3-name').textContent = productosConfig.producto3.nombre;
            document.getElementById('admin-producto4-name').textContent = productosConfig.producto4.nombre;
            
            document.getElementById('admin-producto1-price').textContent = productosConfig.producto1.precio.toLocaleString();
            document.getElementById('admin-producto3-price').textContent = productosConfig.producto3.precio.toLocaleString();
            document.getElementById('admin-producto4-price').textContent = productosConfig.producto4.precio.toLocaleString();
            
            // Actualizar disponibilidad
            actualizarDisponibilidadProductos();
            
            // Actualizar títulos en resumen de compras
            document.getElementById('compras-title1').textContent = productosConfig.producto1.nombre;
            document.getElementById('compras-title2').textContent = "Sacos de " + productosConfig.producto2.nombre;
            document.getElementById('compras-title3').textContent = productosConfig.producto2.nombre + " Sueltas";
            document.getElementById('compras-title4').textContent = productosConfig.producto3.nombre;
            document.getElementById('compras-title5').textContent = productosConfig.producto4.nombre;
        }
        
        // Actualizar disponibilidad de productos
        function actualizarDisponibilidadProductos() {
            // Producto 1
            const producto1Card = document.getElementById('producto1-card');
            if (productosConfig.producto1.disponible) {
                producto1Card.classList.remove('unavailable');
                if (producto1Card.querySelector('.unavailable-tag')) {
                    producto1Card.querySelector('.unavailable-tag').remove();
                }
            } else {
                producto1Card.classList.add('unavailable');
                if (!producto1Card.querySelector('.unavailable-tag')) {
                    const tag = document.createElement('div');
                    tag.className = 'unavailable-tag';
                    tag.innerHTML = '<i class="fas fa-ban"></i> Fuera de temporada';
                    producto1Card.prepend(tag);
                }
            }
            
            // Producto 2
            const producto2Card = document.getElementById('producto2-card');
            const sacosGroup = document.getElementById('sacos-producto2-group');
            const producto2Info = document.getElementById('producto2-info');
            const adminSacosGroup = document.getElementById('admin-sacos-producto2-group');
            const adminProducto2Info = document.getElementById('admin-producto2-info');
            
            if (productosConfig.producto2.disponible) {
                producto2Card.classList.remove('unavailable');
                if (producto2Card.querySelector('.unavailable-tag')) {
                    producto2Card.querySelector('.unavailable-tag').remove();
                }
                
                // Manejar venta por saco
                if (productosConfig.producto2.ventaPorSaco) {
                    sacosGroup.style.display = 'block';
                    producto2Info.textContent = "Saco de 25 kilos o sueltas";
                    if (adminSacosGroup) adminSacosGroup.style.display = 'block';
                    if (adminProducto2Info) adminProducto2Info.textContent = "Saco de 25 kilos o sueltas";
                } else {
                    sacosGroup.style.display = 'none';
                    producto2Info.textContent = "Precio por kilo: $" + productosConfig.producto2.precio.toLocaleString();
                    if (adminSacosGroup) adminSacosGroup.style.display = 'none';
                    if (adminProducto2Info) adminProducto2Info.textContent = "Precio por kilo: $" + productosConfig.producto2.precio.toLocaleString();
                }
            } else {
                producto2Card.classList.add('unavailable');
                if (!producto2Card.querySelector('.unavailable-tag')) {
                    const tag = document.createElement('div');
                    tag.className = 'unavailable-tag';
                    tag.innerHTML = '<i class="fas fa-ban"></i> Temporalmente no disponible';
                    producto2Card.prepend(tag);
                }
            }
            
            // Producto 3
            const producto3Card = document.getElementById('producto3-card');
            if (productosConfig.producto3.disponible) {
                producto3Card.classList.remove('unavailable');
                if (producto3Card.querySelector('.unavailable-tag')) {
                    producto3Card.querySelector('.unavailable-tag').remove();
                }
            } else {
                producto3Card.classList.add('unavailable');
                if (!producto3Card.querySelector('.unavailable-tag')) {
                    const tag = document.createElement('div');
                    tag.className = 'unavailable-tag';
                    tag.innerHTML = '<i class="fas fa-ban"></i> Temporalmente no disponible';
                    producto3Card.prepend(tag);
                }
            }
            
            // Producto 4
            const producto4Card = document.getElementById('producto4-card');
            if (productosConfig.producto4.disponible) {
                producto4Card.classList.remove('unavailable');
                if (producto4Card.querySelector('.unavailable-tag')) {
                    producto4Card.querySelector('.unavailable-tag').remove();
                }
            } else {
                producto4Card.classList.add('unavailable');
                if (!producto4Card.querySelector('.unavailable-tag')) {
                    const tag = document.createElement('div');
                    tag.className = 'unavailable-tag';
                    tag.innerHTML = '<i class="fas fa-ban"></i> Temporalmente no disponible';
                    producto4Card.prepend(tag);
                }
            }
        }
        
        // Mostrar notificación
        function showNotification(message, isError = false) {
            notificationText.textContent = message;
            notification.className = 'notification';
            notification.classList.add(isError ? 'error' : 'success');
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
        
        // Calcular total del pedido
        function calcularTotalPedido(producto1, sacos, kilosProducto2, producto3, producto4) {
            let total = 0;
            total += producto1 * productosConfig.producto1.precio;
            total += sacos * 25 * productosConfig.producto2.precio;
            total += kilosProducto2 * productosConfig.producto2.precio;
            total += producto3 * productosConfig.producto3.precio;
            total += producto4 * productosConfig.producto4.precio;
            return total;
        }
        
        // Actualizar panel de administrador
        function actualizarPanelAdmin() {
            // Filtrar solo pedidos pendientes para el total
            const pedidosPendientes = pedidos.filter(p => p.estado === 'pendiente');
            const totalPedidos = pedidos.length;
            const totalPendientes = pedidosPendientes.length;
            
            totalPedidosElement.textContent = totalPedidos;
            pedidosPendientesElement.textContent = totalPendientes;
            
            // Calcular estadísticas de productos
            let totalSacos = 0;
            let totalKilosPapas = 0;
            let totalIngresos = 0;
            
            pedidos.forEach(pedido => {
                totalSacos += pedido.sacosProducto2 || 0;
                totalKilosPapas += pedido.kilosProducto2 || 0;
                totalIngresos += pedido.total || 0;
            });
            
            // Añadir kilos de los sacos
            totalKilosPapas += totalSacos * 25;
            
            totalSacosElement.textContent = totalSacos;
            totalKilosPapasElement.textContent = totalKilosPapas;
            totalIngresosElement.textContent = totalIngresos.toLocaleString();
            
            // Calcular estadísticas de resumen
            calcularEstadisticasResumen();
            
            // Actualizar tabla de pedidos
            ordersBody.innerHTML = '';
            
            if (pedidos.length === 0) {
                ordersBody.innerHTML = '<tr><td colspan="6" style="text-align: center; padding: 30px; color: #666;">No hay pedidos registrados</td></tr>';
                return;
            }
            
            // Ordenar pedidos: primero pendientes, luego completados
            const pedidosOrdenados = [...pedidos].sort((a, b) => {
                if (a.estado === 'pendiente' && b.estado === 'completado') return -1;
                if (a.estado === 'completado' && b.estado === 'pendiente') return 1;
                return 0;
            });
            
            pedidosOrdenados.forEach(pedido => {
                const row = document.createElement('tr');
                
                // Resaltar fila según estado
                if (pedido.estado === 'completado') {
                    row.style.opacity = '0.7';
                }
                
                // Formatear productos
                const productos = [];
                if (pedido.producto1 > 0) productos.push(`${productosConfig.producto1.nombre}: ${pedido.producto1} kg`);
                if (pedido.sacosProducto2 > 0) productos.push(`Sacos ${productosConfig.producto2.nombre}: ${pedido.sacosProducto2}`);
                if (pedido.kilosProducto2 > 0) productos.push(`${productosConfig.producto2.nombre} sueltas: ${pedido.kilosProducto2} kg`);
                if (pedido.producto3 > 0) productos.push(`${productosConfig.producto3.nombre}: ${pedido.producto3} kg`);
                if (pedido.producto4 > 0) productos.push(`${productosConfig.producto4.nombre}: ${pedido.producto4}`);
                
                row.innerHTML = `
                    <td>${pedido.nombre}</td>
                    <td>${pedido.telefono}</td>
                    <td>${productos.join('<br>')}</td>
                    <td>${pedido.comentarios || '---'}</td>
                    <td>
                        <span class="status-badge status-${pedido.estado}">
                            ${pedido.estado === 'pendiente' ? 'Pendiente' : 'Completado'}
                        </span>
                    </td>
                    <td>
                        ${pedido.estado === 'pendiente' ? 
                            `<button class="action-btn btn-complete" data-id="${pedido.id}">
                                <i class="fas fa-check"></i> Completar
                            </button>` : ''}
                        <button class="action-btn btn-delete" data-id="${pedido.id}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                ordersBody.appendChild(row);
            });
            
            // Añadir event listeners a los botones de acción
            document.querySelectorAll('.btn-complete').forEach(btn => {
                btn.addEventListener('click', () => {
                    const id = btn.dataset.id;
                    const pedido = pedidos.find(p => p.id === id);
                    if (pedido) {
                        pedido.estado = 'completado';
                        actualizarPanelAdmin();
                        showNotification(`Pedido de ${pedido.nombre} marcado como completado`);
                    }
                });
            });
            
            document.querySelectorAll('.btn-delete').forEach(btn => {
                btn.addEventListener('click', () => {
                    const id = btn.dataset.id;
                    const index = pedidos.findIndex(p => p.id === id);
                    if (index !== -1) {
                        const nombre = pedidos[index].nombre;
                        pedidos.splice(index, 1);
                        actualizarPanelAdmin();
                        showNotification(`Pedido de ${nombre} eliminado`);
                    }
                });
            });
        }
        
        // Calcular estadísticas para la pestaña de resumen
        function calcularEstadisticasResumen() {
            let totalIngresos = 0;
            let productoVentas = {
                producto1: 0,
                producto2: 0,
                producto3: 0,
                producto4: 0
            };
            
            let clientes = {};
            
            pedidos.forEach(pedido => {
                totalIngresos += pedido.total || 0;
                
                // Contar productos
                if (pedido.producto1 > 0) productoVentas.producto1 += pedido.producto1;
                if (pedido.sacosProducto2 > 0 || pedido.kilosProducto2 > 0) productoVentas.producto2 += (pedido.sacosProducto2 * 25) + pedido.kilosProducto2;
                if (pedido.producto3 > 0) productoVentas.producto3 += pedido.producto3;
                if (pedido.producto4 > 0) productoVentas.producto4 += pedido.producto4;
                
                // Contar pedidos por cliente
                if (!clientes[pedido.telefono]) {
                    clientes[pedido.telefono] = {
                        nombre: pedido.nombre,
                        count: 0
                    };
                }
                clientes[pedido.telefono].count++;
            });
            
            // Actualizar total ingresos
            totalIngresosElement.textContent = totalIngresos.toLocaleString();
            
            // Encontrar producto más popular
            let maxVentas = 0;
            let productoPopular = '---';
            
            for (const producto in productoVentas) {
                if (productoVentas[producto] > maxVentas) {
                    maxVentas = productoVentas[producto];
                    productoPopular = productosConfig[producto].nombre;
                }
            }
            
            productoPopularElement.textContent = productoPopular;
            
            // Encontrar cliente más frecuente
            let maxPedidos = 0;
            let clienteFrecuente = '---';
            
            for (const telefono in clientes) {
                if (clientes[telefono].count > maxPedidos) {
                    maxPedidos = clientes[telefono].count;
                    clienteFrecuente = clientes[telefono].nombre;
                }
            }
            
            clienteFrecuenteElement.textContent = clienteFrecuente;
            
            // Calcular promedio por pedido
            const promedio = pedidos.length > 0 ? totalIngresos / pedidos.length : 0;
            promedioPedidoElement.textContent = promedio.toLocaleString('es-CL', {maximumFractionDigits: 0});
        }
        
        // Calcular resumen de compras
        function calcularResumenCompras() {
            let totalProducto1 = 0;
            let totalSacos = 0;
            let totalProducto2Sueltas = 0;
            let totalProducto3 = 0;
            let totalProducto4 = 0;
            
            // Sumar solo pedidos pendientes
            const pedidosPendientes = pedidos.filter(p => p.estado === 'pendiente');
            
            pedidosPendientes.forEach(pedido => {
                totalProducto1 += pedido.producto1 || 0;
                totalSacos += pedido.sacosProducto2 || 0;
                totalProducto2Sueltas += pedido.kilosProducto2 || 0;
                totalProducto3 += pedido.producto3 || 0;
                totalProducto4 += pedido.producto4 || 0;
            });
            
            // Actualizar valores en el modal
            comprasProducto1.textContent = totalProducto1 + ' kg';
            comprasSacos.textContent = totalSacos;
            comprasPapasSueltas.textContent = totalProducto2Sueltas + ' kg';
            comprasProducto3.textContent = totalProducto3 + ' kg';
            comprasProducto4.textContent = totalProducto4 + ' unidades';
            
            // Actualizar tabla de resumen
            comprasBody.innerHTML = '';
            
            const productos = [
                { nombre: productosConfig.producto1.nombre, cantidad: totalProducto1, unidad: 'kg' },
                { nombre: "Sacos de " + productosConfig.producto2.nombre, cantidad: totalSacos, unidad: 'unidades' },
                { nombre: productosConfig.producto2.nombre + " Sueltas", cantidad: totalProducto2Sueltas, unidad: 'kg' },
                { nombre: productosConfig.producto3.nombre, cantidad: totalProducto3, unidad: 'kg' },
                { nombre: productosConfig.producto4.nombre, cantidad: totalProducto4, unidad: 'unidades' }
            ];
            
            productos.forEach(producto => {
                if (producto.cantidad > 0) {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${producto.nombre}</td>
                        <td>${producto.cantidad}</td>
                        <td>${producto.unidad}</td>
                    `;
                    comprasBody.appendChild(row);
                }
            });
            
            if (comprasBody.children.length === 0) {
                comprasBody.innerHTML = '<tr><td colspan="3" style="text-align: center; padding: 20px; color: #666;">No hay productos para comprar</td></tr>';
            }
        }
        
        // Guardar configuración de productos
        savePricesBtn.addEventListener('click', () => {
            // Guardar nombres
            productosConfig.producto1.nombre = document.getElementById('producto1-name-input').value;
            productosConfig.producto2.nombre = document.getElementById('producto2-name-input').value;
            productosConfig.producto3.nombre = document.getElementById('producto3-name-input').value;
            productosConfig.producto4.nombre = document.getElementById('producto4-name-input').value;
            
            // Guardar precios
            productosConfig.producto1.precio = parseInt(document.getElementById('producto1-price-input').value) || 3500;
            productosConfig.producto1.disponible = document.getElementById('producto1-available').checked;
            
            productosConfig.producto2.precio = parseInt(document.getElementById('producto2-price-input').value) || 1500;
            productosConfig.producto2.disponible = document.getElementById('producto2-available').checked;
            productosConfig.producto2.ventaPorSaco = document.getElementById('producto2-saco').checked;
            
            productosConfig.producto3.precio = parseInt(document.getElementById('producto3-price-input').value) || 1800;
            productosConfig.producto3.disponible = document.getElementById('producto3-available').checked;
            
            productosConfig.producto4.precio = parseInt(document.getElementById('producto4-price-input').value) || 800;
            productosConfig.producto4.disponible = document.getElementById('producto4-available').checked;
            
            // Guardar en localStorage
            localStorage.setItem('productosConfig', JSON.stringify(productosConfig));
            
            // Actualizar UI
            actualizarProductosUI();
            
            showNotification('Configuración guardada con éxito!');
        });
        
        // Cambiar entre tabs de admin
        adminTabs.forEach(tab => {
            tab.addEventListener('click', () => {
                // Remover clase active de todas las tabs
                adminTabs.forEach(t => t.classList.remove('active'));
                adminTabContents.forEach(c => c.classList.remove('active'));
                
                // Añadir clase active a la tab seleccionada
                tab.classList.add('active');
                document.getElementById(tab.dataset.tab + '-tab').classList.add('active');
            });
        });
        
        // Enviar pedido (solicitante)
        enviarPedidoBtn.addEventListener('click', () => {
            const nombre = document.getElementById('nombre').value;
            const telefono = document.getElementById('telefono').value;
            const producto1 = parseInt(document.getElementById('producto1').value) || 0;
            const sacosProducto2 = parseInt(document.getElementById('sacos-producto2').value) || 0;
            const kilosProducto2 = parseInt(document.getElementById('kilos-producto2').value) || 0;
            const producto3 = parseInt(document.getElementById('producto3').value) || 0;
            const producto4 = parseInt(document.getElementById('producto4').value) || 0;
            const comentarios = document.getElementById('comentarios').value;
            
            if (!nombre || !telefono) {
                showNotification('Por favor completa tu nombre y teléfono', true);
                return;
            }
            
            if (producto1 === 0 && sacosProducto2 === 0 && kilosProducto2 === 0 && producto3 === 0 && producto4 === 0) {
                showNotification('Por favor selecciona al menos un producto', true);
                return;
            }
            
            // Verificar disponibilidad
            if (producto1 > 0 && !productosConfig.producto1.disponible) {
                showNotification(`${productosConfig.producto1.nombre} no están disponibles actualmente`, true);
                return;
            }
            
            if ((sacosProducto2 > 0 || kilosProducto2 > 0) && !productosConfig.producto2.disponible) {
                showNotification(`${productosConfig.producto2.nombre} no están disponibles actualmente`, true);
                return;
            }
            
            if (producto3 > 0 && !productosConfig.producto3.disponible) {
                showNotification(`${productosConfig.producto3.nombre} no están disponibles actualmente`, true);
                return;
            }
            
            if (producto4 > 0 && !productosConfig.producto4.disponible) {
                showNotification(`${productosConfig.producto4.nombre} no están disponibles actualmente`, true);
                return;
            }
            
            // Crear nuevo pedido
            const nuevoPedido = {
                id: Date.now().toString(),
                nombre, 
                telefono,
                producto1, 
                sacosProducto2, 
                kilosProducto2, 
                producto3, 
                producto4,
                comentarios,
                fecha: new Date().toLocaleString(),
                estado: 'pendiente',
                total: calcularTotalPedido(producto1, sacosProducto2, kilosProducto2, producto3, producto4)
            };
            
            pedidos.push(nuevoPedido);
            
            // Mostrar notificación
            showNotification('Pedido registrado con éxito!');
            
            // Resetear formulario
            document.getElementById('nombre').value = '';
            document.getElementById('telefono').value = '';
            document.getElementById('producto1').value = '0';
            document.getElementById('sacos-producto2').value = '0';
            document.getElementById('kilos-producto2').value = '0';
            document.getElementById('producto3').value = '0';
            document.getElementById('producto4').value = '0';
            document.getElementById('comentarios').value = '';
            
            // Si es admin, actualizar panel
            if (isAdmin) {
                actualizarPanelAdmin();
            }
        });
        
        // Login de administrador
        loginBtn.addEventListener('click', () => {
            const email = document.getElementById('admin-email').value;
            const password = document.getElementById('admin-password').value;
            
            // Credenciales de prueba
            if (email === 'admin@valledor.com' && password === 'admin123') {
                isAdmin = true;
                adminEmail = email;
                
                // Mostrar panel de administrador
                adminContainer.style.display = 'block';
                solicitanteForm.style.display = 'none';
                
                // Ocultar modal
                loginModal.style.display = 'none';
                
                // Actualizar panel
                actualizarPanelAdmin();
                
                showNotification('Sesión de administrador iniciada');
            } else {
                loginError.style.display = 'block';
                setTimeout(() => {
                    loginError.style.display = 'none';
                }, 3000);
            }
        });
        
        // Logout de administrador
        logoutBtn.addEventListener('click', () => {
            isAdmin = false;
            adminEmail = '';
            adminContainer.style.display = 'none';
            solicitanteForm.style.display = 'block';
            showNotification('Sesión de administrador cerrada');
        });
        
        // Abrir modal de login
        adminLoginLink.addEventListener('click', (e) => {
            e.preventDefault();
            loginModal.style.display = 'flex';
        });
        
        // Cerrar modal de login
        closeLogin.addEventListener('click', () => {
            loginModal.style.display = 'none';
        });
        
        // Abrir modal para agregar pedido
        addOrderBtn.addEventListener('click', () => {
            addOrderModal.style.display = 'flex';
        });
        
        // Cerrar modal para agregar pedido
        closeAddOrderModal.addEventListener('click', () => {
            addOrderModal.style.display = 'none';
        });
        
        // Enviar pedido desde admin
        adminEnviarPedidoBtn.addEventListener('click', () => {
            const nombre = document.getElementById('admin-nombre').value;
            const telefono = document.getElementById('admin-telefono').value;
            const producto1 = parseInt(document.getElementById('admin-producto1').value) || 0;
            const sacosProducto2 = parseInt(document.getElementById('admin-sacos-producto2').value) || 0;
            const kilosProducto2 = parseInt(document.getElementById('admin-kilos-producto2').value) || 0;
            const producto3 = parseInt(document.getElementById('admin-producto3').value) || 0;
            const producto4 = parseInt(document.getElementById('admin-producto4').value) || 0;
            const comentarios = document.getElementById('admin-comentarios').value;
            
            if (!nombre || !telefono) {
                showNotification('Por favor completa nombre y teléfono', true);
                return;
            }
            
            // Crear nuevo pedido
            const nuevoPedido = {
                id: Date.now().toString(),
                nombre, 
                telefono,
                producto1, 
                sacosProducto2, 
                kilosProducto2, 
                producto3, 
                producto4,
                comentarios,
                fecha: new Date().toLocaleString(),
                estado: 'pendiente',
                total: calcularTotalPedido(producto1, sacosProducto2, kilosProducto2, producto3, producto4)
            };
            
            pedidos.push(nuevoPedido);
            
            // Mostrar notificación
            showNotification('Pedido agregado con éxito!');
            
            // Cerrar modal
            addOrderModal.style.display = 'none';
            
            // Resetear formulario
            document.getElementById('admin-nombre').value = '';
            document.getElementById('admin-telefono').value = '';
            document.getElementById('admin-producto1').value = '0';
            document.getElementById('admin-sacos-producto2').value = '0';
            document.getElementById('admin-kilos-producto2').value = '0';
            document.getElementById('admin-producto3').value = '0';
            document.getElementById('admin-producto4').value = '0';
            document.getElementById('admin-comentarios').value = '';
            
            // Actualizar panel
            actualizarPanelAdmin();
        });
        
        // Abrir modal de resumen de compras
        comprasBtn.addEventListener('click', () => {
            calcularResumenCompras();
            comprasModal.style.display = 'flex';
        });
        
        // Cerrar modal de resumen de compras
        closeComprasModal.addEventListener('click', () => {
            comprasModal.style.display = 'none';
        });
        
        // Botón para imprimir resumen
        printComprasBtn.addEventListener('click', () => {
            window.print();
        });
        
        // Botón de exportar
        exportBtn.addEventListener('click', () => {
            // Simular exportación de datos
            const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(pedidos));
            const downloadAnchorNode = document.createElement('a');
            downloadAnchorNode.setAttribute("href", dataStr);
            downloadAnchorNode.setAttribute("download", "pedidos_valledor.json");
            document.body.appendChild(downloadAnchorNode);
            downloadAnchorNode.click();
            downloadAnchorNode.remove();
            
            showNotification('Datos exportados con éxito!');
        });
        
        // Botón de actualizar
        refreshBtn.addEventListener('click', () => {
            actualizarPanelAdmin();
            showNotification('Datos actualizados');
        });
        
        // Inicializar con datos de muestra
        document.addEventListener('DOMContentLoaded', () => {
            // Cargar configuración desde localStorage si existe
            const savedConfig = localStorage.getItem('productosConfig');
            if (savedConfig) {
                productosConfig = JSON.parse(savedConfig);
            }
            
            // Configurar inputs de productos
            document.getElementById('producto1-name-input').value = productosConfig.producto1.nombre;
            document.getElementById('producto2-name-input').value = productosConfig.producto2.nombre;
            document.getElementById('producto3-name-input').value = productosConfig.producto3.nombre;
            document.getElementById('producto4-name-input').value = productosConfig.producto4.nombre;
            
            document.getElementById('producto1-price-input').value = productosConfig.producto1.precio;
            document.getElementById('producto2-price-input').value = productosConfig.producto2.precio;
            document.getElementById('producto3-price-input').value = productosConfig.producto3.precio;
            document.getElementById('producto4-price-input').value = productosConfig.producto4.precio;
            
            document.getElementById('producto1-available').checked = productosConfig.producto1.disponible;
            document.getElementById('producto2-available').checked = productosConfig.producto2.disponible;
            document.getElementById('producto2-saco').checked = productosConfig.producto2.ventaPorSaco;
            document.getElementById('producto3-available').checked = productosConfig.producto3.disponible;
            document.getElementById('producto4-available').checked = productosConfig.producto4.disponible;
            
            // Actualizar UI
            actualizarProductosUI();
            
            // Crear algunos pedidos de muestra
            pedidos.push({
                id: '1',
                nombre: 'María González',
                telefono: '+56987654321',
                producto1: 3,
                sacosProducto2: 1,
                kilosProducto2: 2,
                producto3: 1,
                producto4: 3,
                comentarios: 'Por favor, que las paltas estén maduras',
                fecha: '2023-10-25 10:30',
                estado: 'pendiente',
                total: 15700
            });
            
            pedidos.push({
                id: '2',
                nombre: 'Carlos Rodríguez',
                telefono: '+56912348765',
                producto1: 2,
                sacosProducto2: 0,
                kilosProducto2: 7,
                producto3: 2,
                producto4: 2,
                comentarios: 'Limones grandes por favor',
                fecha: '2023-10-24 15:45',
                estado: 'pendiente',
                total: 11000
            });
            
            pedidos.push({
                id: '3',
                nombre: 'Ana Martínez',
                telefono: '+56955443322',
                producto1: 4,
                sacosProducto2: 0,
                kilosProducto2: 0,
                producto3: 2,
                producto4: 4,
                comentarios: 'Entregar después de las 17:00 hrs',
                fecha: '2023-10-23 09:15',
                estado: 'completado',
                total: 18400
            });
        });
    </script>
</body>
</html>
